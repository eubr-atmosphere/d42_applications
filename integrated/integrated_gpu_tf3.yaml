kind: PersistentVolume
apiVersion: v1
metadata:
  name: task-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 128M
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/volume/vol001"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: task-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 32M 

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sshfs-configmap
data:
  server: sshserver.default.svc.cluster.local
  mountpoint: /mnt

---
apiVersion: v1
kind: Secret
metadata:
  name: sshfs-secret
data:
#  echo -n '-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAwxOE4/R5T7LzWJrk79VKocOL1MznP9wiHzaqosOY5ct4gGrq\n/cMOLpXdrMjODhuc/NEOClt2prExX/sGPjaQQh3E5MYi95Dmjq6kn/3VvvfTPYBm\n3sv6bYdBg4sEt46GpJ41HH1Hgj/rFORkTZVn6KyV1gIHZuCYRe1yhTpEnmWCaNUB\nQnelcDY5grxyA4JAmDEU6MRMgi5Go83TcjcoXn9KVyYKY4gXh/lXAGTdUhihTv6S\n/hHKJaaYD8IwlTtcEu0ykx+w4Dlh5tX+WwaoopfK6wRS1HuutODLJ0qWMSiXjDY4\nhU+tAQiUMdSPVEj7+zYp6ZJxQUXKWs54+m71RQIDAQABAoIBAEuRyC02i7ggLrzo\nZD+0dNDtm8G4Du1iLaXB26Bp/VUn2WqGALqFUX0ieVlyAMDeWZZmtfW1MOWqRuJT\nsDtxj7jNJ3UofGtDKs2jQgronmD4SFDO6QruIflEKFD5Db6969Lhptl+frEqabsS\nLvkPI82y7eiVqKBl6RdNwMtzoxlotE+K1Bcwhbd6ddYbSvd47bPDhhwjCRWWhiV5\ncPBIIAF3huSy/EI+EeCTJvOKvL2wvOlqoVZHtO/mtHvGPJb8F02sJbUYM3E6fH36\n6N4TfJbm1sMP8NqoEEtS1xck9Xb2+RHqYVCPogPjg36TgIZWUZKgplMNWeV9HD5n\nfYwNnAECgYEA4rBqktQgqKDKhxDtHyCslQWWtZOuZ5GHKzsbGw3stsUCIq2DAEEP\nKa+jd7mO4ijROH5GaGkClZHVkz/J+q1kF3OPxlK/j5JCFy/Cwc0R0J9IuySOm9Sm\nTr9jGdwiborybWJeSBcd0wA7hg4bEE4AH5i6qt7oFfj0LULC2h1ECwUCgYEA3Eyx\nOKU6bALYQ1GSU/J8POOfJzst9h21te25T4vZBYdX4faTQmNi/HWrBaXD3kccd8Hr\n4xnovBA1z0Oevv0XDat4fkSsCIZqBlgiiOWZQjqIKGZwB1GKfDLtrP+HszSqusrS\ndiX8vvvyDDkH9HVqnxFEguqvEOsTmlDWn0WZ1UECgYEArc4laD5Ma/4cSkKoC925\ndOi8DKwWZEIoKPVAaxXaEKgsYvo2HtPDFGseIoWbD7vL7kyjHxqkaJlP735RFmoq\n+/AWpDB9v06cbbqo0H6y0gnOce4tiT0Z5fbHvOQTYj4WcdeiAhP3QfhDqxzVk0K6\nxX8MYEZYG8CtNqahTypxKSECgYArBDqywei3gJK0CnCVPcsupI/GPFMMNN7viFzg\nAIG/B5+MevZkRz3j6CId9zFY7O/NHqut67g7SLsJHr4XsxnWTH45wbUJ8R0w4fLU\nYmjbuswtf1suwqhU+ijY2AiqYIVZ9hLEiURiEpY/9r7r6CWKq/eBzMukdRKd1l0i\nOpgAQQKBgB3Vl7ZXQplCKutpDeG8MBN+yKSTNr56aeFsPonDZs9mj4ECthpP0W/+\nm/baGKZjS1YooDk5rfQNWeRjDMf6SkkWDQR4d6HzyIO+NUrD2XAx9PmCiWSCBP5w\nTGbNoRl9CiM0OlxanzwCAtVk7cpI3A1XFtYjSU4l7VftJ0v6WYx+\n-----END RSA PRIVATE KEY-----' | base64
  sshprivkey: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLVxuTUlJRW93SUJBQUtDQVFFQXd4T0U0L1I1VDdMeldKcms3OVZLb2NPTDFNem5QOXdpSHphcW9zT1k1Y3Q0Z0dycVxuL2NNT0xwWGRyTWpPRGh1Yy9ORU9DbHQycHJFeFgvc0dQamFRUWgzRTVNWWk5NURtanE2a24vM1Z2dmZUUFlCbVxuM3N2NmJZZEJnNHNFdDQ2R3BKNDFISDFIZ2ovckZPUmtUWlZuNkt5VjFnSUhadUNZUmUxeWhUcEVubVdDYU5VQlxuUW5lbGNEWTVncnh5QTRKQW1ERVU2TVJNZ2k1R284M1RjamNvWG45S1Z5WUtZNGdYaC9sWEFHVGRVaGloVHY2U1xuL2hIS0phYVlEOEl3bFR0Y0V1MHlreCt3NERsaDV0WCtXd2Fvb3BmSzZ3UlMxSHV1dE9ETEowcVdNU2lYakRZNFxuaFUrdEFRaVVNZFNQVkVqNyt6WXA2Wkp4UVVYS1dzNTQrbTcxUlFJREFRQUJBb0lCQUV1UnlDMDJpN2dnTHJ6b1xuWkQrMGRORHRtOEc0RHUxaUxhWEIyNkJwL1ZVbjJXcUdBTHFGVVgwaWVWbHlBTURlV1pabXRmVzFNT1dxUnVKVFxuc0R0eGo3ak5KM1VvZkd0REtzMmpRZ3Jvbm1ENFNGRE82UXJ1SWZsRUtGRDVEYjY5NjlMaHB0bCtmckVxYWJzU1xuTHZrUEk4Mnk3ZWlWcUtCbDZSZE53TXR6b3hsb3RFK0sxQmN3aGJkNmRkWWJTdmQ0N2JQRGhod2pDUldXaGlWNVxuY1BCSUlBRjNodVN5L0VJK0VlQ1RKdk9Ldkwyd3ZPbHFvVlpIdE8vbXRIdkdQSmI4RjAyc0piVVlNM0U2ZkgzNlxuNk40VGZKYm0xc01QOE5xb0VFdFMxeGNrOVhiMitSSHFZVkNQb2dQamczNlRnSVpXVVpLZ3BsTU5XZVY5SEQ1blxuZll3Tm5BRUNnWUVBNHJCcWt0UWdxS0RLaHhEdEh5Q3NsUVdXdFpPdVo1R0hLenNiR3czc3RzVUNJcTJEQUVFUFxuS2EramQ3bU80aWpST0g1R2FHa0NsWkhWa3ovSitxMWtGM09QeGxLL2o1SkNGeS9Dd2MwUjBKOUl1eVNPbTlTbVxuVHI5akdkd2lib3J5YldKZVNCY2Qwd0E3aGc0YkVFNEFINWk2cXQ3b0ZmajBMVUxDMmgxRUN3VUNnWUVBM0V5eFxuT0tVNmJBTFlRMUdTVS9KOFBPT2ZKenN0OWgyMXRlMjVUNHZaQllkWDRmYVRRbU5pL0hXckJhWEQza2NjZDhIclxuNHhub3ZCQTF6ME9ldnYwWERhdDRma1NzQ0lacUJsZ2lpT1daUWpxSUtHWndCMUdLZkRMdHJQK0hzelNxdXNyU1xuZGlYOHZ2dnlERGtIOUhWcW54RkVndXF2RU9zVG1sRFduMFdaMVVFQ2dZRUFyYzRsYUQ1TWEvNGNTa0tvQzkyNVxuZE9pOERLd1daRUlvS1BWQWF4WGFFS2dzWXZvMkh0UERGR3NlSW9XYkQ3dkw3a3lqSHhxa2FKbFA3MzVSRm1vcVxuKy9BV3BEQjl2MDZjYmJxbzBINnkwZ25PY2U0dGlUMFo1ZmJIdk9RVFlqNFdjZGVpQWhQM1FmaERxeHpWazBLNlxueFg4TVlFWllHOEN0TnFhaFR5cHhLU0VDZ1lBckJEcXl3ZWkzZ0pLMENuQ1ZQY3N1cEkvR1BGTU1OTjd2aUZ6Z1xuQUlHL0I1K01ldlprUnozajZDSWQ5ekZZN08vTkhxdXQ2N2c3U0xzSkhyNFhzeG5XVEg0NXdiVUo4UjB3NGZMVVxuWW1qYnVzd3RmMXN1d3FoVStpalkyQWlxWUlWWjloTEVpVVJpRXBZLzlyN3I2Q1dLcS9lQnpNdWtkUktkMWwwaVxuT3BnQVFRS0JnQjNWbDdaWFFwbENLdXRwRGVHOE1CTit5S1NUTnI1NmFlRnNQb25EWnM5bWo0RUN0aHBQMFcvK1xubS9iYUdLWmpTMVlvb0RrNXJmUU5XZVJqRE1mNlNra1dEUVI0ZDZIenlJTytOVXJEMlhBeDlQbUNpV1NDQlA1d1xuVEdiTm9SbDlDaU0wT2x4YW56d0NBdFZrN2NwSTNBMVhGdFlqU1U0bDdWZnRKMHY2V1l4K1xuLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0=
#   echo -n 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDDE4Tj9HlPsvNYmuTv1Uqhw4vUzOc/3CIfNqqiw5jly3iAaur9ww4uld2syM4OG5z80Q4KW3amsTFf+wY+NpBCHcTkxiL3kOaOrqSf/dW+99M9gGbey/pth0GDiwS3joaknjUcfUeCP+sU5GRNlWforJXWAgdm4JhF7XKFOkSeZYJo1QFCd6VwNjmCvHIDgkCYMRToxEyCLkajzdNyNyhef0pXJgpjiBeH+VcAZN1SGKFO/pL+EcolppgPwjCVO1wS7TKTH7DgOWHm1f5bBqiil8rrBFLUe6604MsnSpYxKJeMNjiFT60BCJQx1I9USPv7NinpknFBRcpaznj6bvVF ubuntu@kubeserver.localdomain' | base64 
  sshpubkey: c3NoLXJzYSBBQUFBQjNOemFDMXljMkVBQUFBREFRQUJBQUFCQVFEREU0VGo5SGxQc3ZOWW11VHYxVXFodzR2VXpPYy8zQ0lmTnFxaXc1amx5M2lBYXVyOXd3NHVsZDJzeU00T0c1ejgwUTRLVzNhbXNURmYrd1krTnBCQ0hjVGt4aUwza09hT3JxU2YvZFcrOTlNOWdHYmV5L3B0aDBHRGl3UzNqb2FrbmpVY2ZVZUNQK3NVNUdSTmxXZm9ySlhXQWdkbTRKaEY3WEtGT2tTZVpZSm8xUUZDZDZWd05qbUN2SElEZ2tDWU1SVG94RXlDTGthanpkTnlOeWhlZjBwWEpncGppQmVIK1ZjQVpOMVNHS0ZPL3BMK0Vjb2xwcGdQd2pDVk8xd1M3VEtUSDdEZ09XSG0xZjViQnFpaWw4cnJCRkxVZTY2MDRNc25TcFl4S0plTU5qaUZUNjBCQ0pReDFJOVVTUHY3TmlucGtuRkJSY3Bhem5qNmJ2VkYgdWJ1bnR1QGt1YmVzZXJ2ZXIubG9jYWxkb21haW4=

---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: sshserver
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: sshserver
    spec:
      volumes:
        - name: sshserver
          persistentVolumeClaim:
           claimName: task-pv-claim
      containers:
        - name: sshd
          image: eubraatmosphere/eubraatmosphere_autobuild:ub16_sshd
          env:
            - name: SSHKEY
              valueFrom:
                secretKeyRef:
                  name: sshfs-secret
                  key: sshpubkey
          ports:
            - containerPort: 22
          volumeMounts:
            - mountPath: "/share/vol001"
              name: sshserver
---
kind: Service
apiVersion: v1
metadata:
  name: sshserver
spec:
#  type: NodePort
  selector:
    app: sshserver
  ports:
  - protocol: TCP
#    nodePort: 30010
    port: 22
    targetPort: 22

---
#### Deploy Notebook
kind: Deployment
apiVersion: apps/v1
metadata:
  name: tf-notebook
  labels:
    app: tf-notebook
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tf-notebook
  template:
    metadata:
      labels:
        app: tf-notebook
    spec: 
      containers:
      - name: minimal-notebook
        image: eubraatmosphere/eubraatmosphere_autobuild:ub16_tensorflow13-notebook
        ports:
        - containerPort: 8888
        #command: ["bash"]
        #args: ["-c", "sleep 3600"]
        command: ["start-notebook.sh"]
        args: ["--NotebookApp.token=''"]
        securityContext:
          privileged: true
        env:
          - name: SSHPRIVKEY
            valueFrom:
              secretKeyRef:
                name: sshfs-secret
                key: sshprivkey
          - name: SSHPUBKEY
            valueFrom:
              secretKeyRef:
                name: sshfs-secret
                key: sshpubkey
          - name: SERVER
            valueFrom:
              configMapKeyRef:
                name: sshfs-configmap
                key: server
          - name: MOUNTPOINT
            valueFrom:
              configMapKeyRef:
                name: sshfs-configmap
                key: mountpoint
          - name: STARTCLUSTER
            value: "true"
#        - name: SKIPMOUNT
#          value: "true"
---
kind: Service
apiVersion: v1
metadata:
  name: tf-notebook
spec:
  type: NodePort
  selector:
    app: tf-notebook
  ports:
  - protocol: TCP
    nodePort: 30050
    port: 8888
    targetPort: 8888
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: distrib-tf
data:
  #wn-list: 'clusterworker-0.tfcluster.default.svc.cluster.local:8000,clusterworker-1.tfcluster.default.svc.cluster.local:8000,clusterworker-2.tfcluster.default.svc.cluster.local:8000'
  wn-list: 'clusterworker-0.tfcluster.default.svc.cluster.local:8000,clusterworker-1.tfcluster.default.svc.cluster.local:8000'
  #wn-list: 'clusterworker-0.tfcluster.default.svc.cluster.local:8000'
  ps-list: 'psserver-0.psserver.default.svc.cluster.local:8000'

---
kind: Service
apiVersion: v1
metadata:
  name: psserver
spec:
  selector:
    app: psserver
  ports:
  - protocol: TCP
    port: 9367
    name: nginx
    targetPort: 80
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: psserver
spec:
  serviceName: "psserver"
  replicas: 1
  selector:
    matchLabels:
      app: psserver
  template:
    metadata:
      labels: 
        app: psserver
    spec:
      containers:
       - name: psserver
         image: eubraatmosphere/eubraatmosphere_autobuild:ub16_ssfstf11-client
         resources:
           limits:
             cpu: "1"
           requests:
             cpu: "0.5"
             # Two nodes args: [ 'python3 /usr/local/bin/mnist_psserver.py --job_name=ps --task_index=0 --worker_hosts=clusterworker-0.tfcluster.default.svc.cluster.local:8000,clusterworker-1.tfcluster.default.svc.cluster.local:8000 --ps_hosts=psserver-0.psserver.default.svc.cluster.local:8000' ]
         args: [ 'python3 /usr/local/bin/mnist_psserver.py --job_name=ps --task_index=0 --worker_hosts=$WNLIST --ps_hosts=$PSLIST' ]
              # One node  args: [ 'python3 /usr/local/bin/mnist_psserver.py --job_name=ps --task_index=0 --worker_hosts=clusterworker-0.tfcluster.default.svc.cluster.local:8000 --ps_hosts=psserver-0.psserver.default.svc.cluster.local:8000' ]
         securityContext:
           privileged: true
         env:
           - name: SSHPRIVKEY
             valueFrom:
               secretKeyRef:
                 name: sshfs-secret
                 key: sshprivkey
           - name: SSHPUBKEY
             valueFrom:
               secretKeyRef:
                name: sshfs-secret
                key: sshpubkey
           - name: PSLIST
             valueFrom:
               configMapKeyRef:
                 name: distrib-tf
                 key: ps-list
           - name: WNLIST
             valueFrom:
               configMapKeyRef:
                 name: distrib-tf
                 key: wn-list
           - name: SERVER
             valueFrom:
               configMapKeyRef:
                 name: sshfs-configmap
                 key: server
           - name: MOUNTPOINT
             valueFrom:
               configMapKeyRef:
                 name: sshfs-configmap
                 key: mountpoint
           - name: SKIPMOUNT
             value: "true"

---
kind: Service
apiVersion: v1
metadata:
  name: tfcluster
spec:
  selector:
    app: clusterworker
  ports:
  - protocol: TCP
    port: 9376
    name: nginx
    targetPort: 80
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: clusterworker
spec:
  serviceName: "tfcluster"
  replicas: 2
  selector:
    matchLabels:
      app: clusterworker
  template:
    metadata:
      labels: 
        app: clusterworker
    spec:
      containers:
       - name: opencvfilter
         image: eubraatmosphere/eubraatmosphere_autobuild:ub16gpu_ssfstf13-client
         resources:
           limits:
             nvidia.com/gpu: 1 #Number of GPUs
             cpu: "1"
           requests:
             cpu: "0.5"
             # args: [ 'python3 /usr/local/bin/mnist_worker.py --job_name=worker --task_index=$(hostname| sed -e "s/clusterworker-//") --worker_hosts=clusterworker-0.tfcluster.default.svc.cluster.local:8000,clusterworker-1.tfcluster.default.svc.cluster.local:8000 --ps_hosts=psserver-0.psserver.default.svc.cluster.local:8000 & ipengine --file=/mnt/.ipython/profile_default/security/ipcontroller-engine.json' ]
         args: [ 'CUDA_VISIBLE_DEVICES=$(hostname| sed -e "s/clusterworker-//") python3 /usr/local/bin/mnist_worker.py --job_name=worker --task_index=$(hostname| sed -e "s/clusterworker-//") --worker_hosts=$WNLIST --ps_hosts=$PSLIST & ipengine --file=/mnt/.ipython/profile_default/security/ipcontroller-engine.json' ]
         securityContext:
           privileged: true
         env:
           - name: PSLIST
             valueFrom:
               configMapKeyRef:
                 name: distrib-tf
                 key: ps-list
           - name: WNLIST
             valueFrom:
               configMapKeyRef:
                 name: distrib-tf
                 key: wn-list
           - name: SSHPRIVKEY
             valueFrom:
               secretKeyRef:
                 name: sshfs-secret
                 key: sshprivkey
           - name: SSHPUBKEY
             valueFrom:
               secretKeyRef:
                name: sshfs-secret
                key: sshpubkey
           - name: SERVER
             valueFrom:
               configMapKeyRef:
                 name: sshfs-configmap
                 key: server
           - name: MOUNTPOINT
             valueFrom:
               configMapKeyRef:
                 name: sshfs-configmap
                 key: mountpoint
#           - name: SKIPMOUNT
#             value: "true"

